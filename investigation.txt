1. Results of running backtracking and forward checking algorithms with three different heuristics on 6x6, 8x8 and 10x10 are as below. Note that the amount of nodes visited is limited to 5,000,000. Results include average runtime and average number of nodes visited.

For 6x6 map:
-----------
* Backtracking with most constrained heuristic: 0.0024127960205078125 secs; 1 node
* Backtracking with most constraining heuristic: 0.0016829967498779297 secs; 1 node
* Backtracking with hybrid heuristic: 0.0017211437225341797; 1 node

* Forward checking with most constrained heuristic: 0.0007758935293 secs; 1 node
* Forward checking with most constraining heuristic:0.0007629394531 secs; 1 node
* Forward checking with hybrid heuristic: 0.0008021990458 secs; 1 node

For 8x8 map:
-----------
* Backtracking with most constrained heuristic: 0.004426002502441406 secs; 1 node
* Backtracking with most constraining heuristic: 0.004378795623779297 secs; 1 node
* Backtracking with hybrid heuristic: 0.00824117660522461 secs; 1 node

* Forward checking with most constrained heuristic: 0.001575311025 secs; 1 node
* Forward checking with most constraining heuristic: 0.001499414444 secs; 1 node
* Forward checking with hybrid heuristic: 0.001645008723 secs; 1 node

For 10x10 map:
-------------
* Backtracking with most constrained heuristic: 0.00722503662109375 secs; 1 node
* Backtracking with most constraining heuristic: 0.006939888000488281 secs; 1 node
* Backtracking with hybrid heuristic: 0.0093231201171875 secs; 1 node

* Forward checking with most constrained heuristic: 0.00257563591 secs; 1 node
* Forward checking with most constraining heuristic: 0.002607901891 secs; 1 node
* Forward checking with hybrid heuristic: 0.002583821615 secs; 1 node

For 12x12 map:
-------------
* Backtracking with most constrained heuristic: 0.04202032089 secs; 11 nodes
* Backtracking with most constraining heuristic: 0.02690871557 secs; 11 nodes
* Backtracking with hybrid heuristic: 0.06855805715 secs; 23 nodes

* Forward checking with most constrained heuristic: 0.006344954173 secs; 9 nodes
* Forward checking with most constraining heuristic: 0.01059150696 secs; 17 nodes
* Forward checking with hybrid heuristic: 0.007397731145 secs; 9 nodes

For 14x14 map:
-------------
* Backtracking with most constrained heuristic: 0.03728524844 secs; 8 nodes
* Backtracking with most constraining heuristic: 0.1762021383 secs; 42 nodes
* Backtracking with hybrid heuristic: 0.1518623829 secs; 26 nodes

* Forward checking with most constrained heuristic: 0.00843667984 secs; 8 nodes
* Forward checking with most constraining heuristic: 0.01758567492 secs; 20 nodes
* Forward checking with hybrid heuristic: 0.009161472321 secs; 8 nodes

For 16x16 map:
-------------
* Backtracking with most constrained heuristic:
* Backtracking with most constraining heuristic:
* Backtracking with hybrid heuristic:

* Forward checking with most constrained heuristic: 155.656998897 secs; 13398+12626+880384 = 38020 nodes
* Forward checking with most constraining heuristic: Timeout after visiting 5,000,000 nodes in 1998 seconds
* Forward checking with hybrid heuristic: 288.457603931427+158.34367203712463+145.95407605171204 = 197.5851173401 secs ; 456686+284916+260738 = 334113 nodes


2. Results of running backtracking and forward checking algorithms with three different heuristics on 12x12 board with different number of walls are as below. Note that the amount of nodes visited is limited to 5,000,000. Results include average runtime and average number of nodes visited.

For 12 walls:
------------
* Backtracking with most constrained heuristic:
* Backtracking with most constraining heuristic:
* Backtracking with hybrid heuristic:

* Forward checking with most constrained heuristic: Timeout after visiting 5,000,000 nodes in 1133 seconds
* Forward checking with most constraining heuristic: Timeout after visiting 5,000,000 nodes in 2100 seconds
* Forward checking with hybrid heuristic: 0.5972946485 secs; 1674 nodes

For 24 walls:
------------
* Backtracking with most constrained heuristic:
* Backtracking with most constraining heuristic:
* Backtracking with hybrid heuristic:

* Forward checking with most constrained heuristic: Timeout after visiting 5,000,000 nodes in 1296 seconds
* Forward checking with most constraining heuristic: Timeout after visiting 5,000,000 nodes in 1683 seconds
* Forward checking with hybrid heuristic: Timeout after visiting 5,000,000 nodes in 1538 seconds

For 48 walls:
------------
* Backtracking with most constrained heuristic: 0.013060808181762695 secs; 1 node
* Backtracking with most constraining heuristic: 0.005853891372680664 secs; 1 node
* Backtracking with hybrid heuristic: 0.005465984344482422 secs; 1 node

* Forward checking with most constrained heuristic: 0.004359404246 secs; 1 node
* Forward checking with most constraining heuristic: 0.004519621531 secs; 1 node
* Forward checking with hybrid heuristic: 0.004532019297 secs; 1 node


*** SUMMARY ***
Pre-processing typically takes care of a lot of variables, especially in smaller puzzles. In general, forward checking algorithm checks less number of nodes and runs faster compared to backtracking algorithm. With larger puzzles, such as 14x14 or 16x16, forward checking checks a significantly smaller amount of nodes than backtracking. However, this can also depend the specific implementation of the algorithm, if the overhead is high, one algorithm could take more time to run even if it checks less number of nodes.

On average, forward checking takes 20% the time that backtracking would take. Backtracking also visits about 50% more nodes than forward checking. This is a huge advantage that forward checking has over backtracking because it can avoid the wrong path ahead of time.